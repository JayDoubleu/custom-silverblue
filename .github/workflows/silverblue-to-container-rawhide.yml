name: Silverblue - Rawhide
on: 
  workflow_dispatch:
    inputs:
      build_container:
        description: 'Build container repository'
        required: true
        default: 'registry.fedoraproject.org/fedora:rawhide'
      build_script:
        description: 'Build script to execute'
        required: true
        default: 'build.sh'
      rpm_ostree_version:
        description: 'rpm-ostree version'
        required: true
        default: 'rpm-ostree-2021.14.79.ga30dec3f-1.fc36.x86_64'
      source_repository:
        description: 'Source repository with manifests for rpm-ostree based Fedora variants'
        required: true
        default: 'https://pagure.io/workstation-ostree-config'
      source_repository_branch:
        description: 'Source repository branch'
        required: true
        default: 'main'
      source_repository_manifest:
        description: 'Source repository manifest'
        required: true
        default: 'fedora-silverblue.yaml'
      build_destination_ostree_refspec:
        description: 'Build ostree refspec'
        required: true
        default: 'fedora/rawhide/x86_64/silverblue'
      build_destination_image_label:
        description: 'Container image label to push'
        required: true
        default: 'fedora-silverblue:rawhide'
      docker_args:
        description: 'Docker arguments'
        required: true
        default: >
          --privileged
          --cap-add=ALL
          --ipc=host
          --pid=host
          --tmpfs /tmp
          --tmpfs /run
          --security-opt apparmor=unconfined
          --volume /sys/fs/cgroup:/sys/fs/cgroup:ro

jobs:
  build-and-push:
    name: >
      Build and push (
      Manifest: ${{ github.event.inputs.source_repository_manifest }}
      Branch: ${{ github.event.inputs.source_repository_branch }}
      Repo: ${{ github.event.inputs.source_repository }})

    runs-on: ubuntu-latest

    steps:  
    - name: Checkout master
      uses: actions/checkout@v2

    - name: Build ostree and push to ghcr
      run: >
        env &&
        docker run 
        ${{ github.event.inputs.docker_args }}
        --volume $(pwd):/tmp/container
        --volume /var/run/docker.sock:/var/run/docker.sock
        --env GITHUB_ACTOR="$GITHUB_ACTOR"
        --env GITHUB_TOKEN="${{secrets.GITHUB_TOKEN}}"
        --env RPM_OSTREE_VERSION=${{ github.event.inputs.rpm_ostree_version }}
        --env SOURCE_REPOSITORY=${{ github.event.inputs.source_repository }}
        --env SOURCE_REPOSITORY_BRANCH=${{ github.event.inputs.source_repository_branch }}
        --env SOURCE_REPOSITORY_MANIFEST=${{ github.event.inputs.source_repository_manifest }}
        --env BUILD_DESTINATION_OSTREE_REFSPEC=${{ github.event.inputs.build_destination_ostree_refspec }}
        --env BUILD_DESTINATION_IMAGE_LABEL=${{ github.event.inputs.build_destination_image_label }}
        ${{ github.event.inputs.build_container }} /tmp/container/${{ github.event.inputs.build_script }}
        # I'm givin' her all she's got, captain!
